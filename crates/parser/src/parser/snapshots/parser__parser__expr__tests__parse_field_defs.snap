---
source: crates/parser/src/parser/expr.rs
expression: fields
---
[
    FieldDef {
        attrs: [
            Attribute {
                kind: DocComment(
                    Symbol(29, " # Safety"),
                ),
                style: Outer,
                id: AttrId(
                    0,
                ),
                span: Span {
                    start: BytePos(
                        1,
                    ),
                    end: BytePos(
                        12,
                    ),
                },
            },
            Attribute {
                kind: DocComment(
                    Symbol(30, " This is a comment"),
                ),
                style: Outer,
                id: AttrId(
                    1,
                ),
                span: Span {
                    start: BytePos(
                        13,
                    ),
                    end: BytePos(
                        33,
                    ),
                },
            },
            Attribute {
                kind: DocComment(
                    Symbol(31, " This is a second line of comment"),
                ),
                style: Outer,
                id: AttrId(
                    2,
                ),
                span: Span {
                    start: BytePos(
                        34,
                    ),
                    end: BytePos(
                        69,
                    ),
                },
            },
            Attribute {
                kind: Meta(
                    MetaAttr {
                        ident: Ident {
                            symbol: Symbol(17, "description"),
                            span: Span {
                                start: BytePos(
                                    96,
                                ),
                                end: BytePos(
                                    133,
                                ),
                            },
                        },
                        expr: Some(
                            Expr {
                                attrs: [],
                                kind: Literal(
                                    Str,
                                    Symbol(34, "The API Key of the User of the User"),
                                ),
                                id: NodeId(DUMMY),
                                span: Span {
                                    start: BytePos(
                                        96,
                                    ),
                                    end: BytePos(
                                        133,
                                    ),
                                },
                            },
                        ),
                    },
                ),
                style: Inline,
                id: AttrId(
                    3,
                ),
                span: Span {
                    start: BytePos(
                        96,
                    ),
                    end: BytePos(
                        133,
                    ),
                },
            },
            Attribute {
                kind: Meta(
                    MetaAttr {
                        ident: Ident {
                            symbol: Symbol(35, "prefix"),
                            span: Span {
                                start: BytePos(
                                    136,
                                ),
                                end: BytePos(
                                    142,
                                ),
                            },
                        },
                        expr: Some(
                            Expr {
                                attrs: [],
                                kind: Literal(
                                    Str,
                                    Symbol(36, "Api-Key"),
                                ),
                                id: NodeId(DUMMY),
                                span: Span {
                                    start: BytePos(
                                        144,
                                    ),
                                    end: BytePos(
                                        153,
                                    ),
                                },
                            },
                        ),
                    },
                ),
                style: Inline,
                id: AttrId(
                    4,
                ),
                span: Span {
                    start: BytePos(
                        135,
                    ),
                    end: BytePos(
                        153,
                    ),
                },
            },
        ],
        ident: Ident {
            symbol: Symbol(32, "Authorization"),
            span: Span {
                start: BytePos(
                    70,
                ),
                end: BytePos(
                    83,
                ),
            },
        },
        ty: Ty {
            kind: Path(
                Path {
                    segments: [
                        PathSegment {
                            ident: Ident {
                                symbol: Symbol(33, "long_string"),
                                span: Span {
                                    start: BytePos(
                                        84,
                                    ),
                                    end: BytePos(
                                        95,
                                    ),
                                },
                            },
                            id: NodeId(DUMMY),
                        },
                    ],
                    span: Span {
                        start: BytePos(
                            96,
                        ),
                        end: BytePos(
                            133,
                        ),
                    },
                },
            ),
            id: NodeId(DUMMY),
            span: Span {
                start: BytePos(
                    84,
                ),
                end: BytePos(
                    95,
                ),
            },
        },
        id: NodeId(DUMMY),
        span: Span {
            start: BytePos(
                1,
            ),
            end: BytePos(
                154,
            ),
        },
    },
    FieldDef {
        attrs: [
            Attribute {
                kind: Meta(
                    MetaAttr {
                        ident: Ident {
                            symbol: Symbol(17, "description"),
                            span: Span {
                                start: BytePos(
                                    249,
                                ),
                                end: BytePos(
                                    272,
                                ),
                            },
                        },
                        expr: Some(
                            Expr {
                                attrs: [],
                                kind: Literal(
                                    Str,
                                    Symbol(39, "The Model of the User"),
                                ),
                                id: NodeId(DUMMY),
                                span: Span {
                                    start: BytePos(
                                        249,
                                    ),
                                    end: BytePos(
                                        272,
                                    ),
                                },
                            },
                        ),
                    },
                ),
                style: Inline,
                id: AttrId(
                    5,
                ),
                span: Span {
                    start: BytePos(
                        249,
                    ),
                    end: BytePos(
                        272,
                    ),
                },
            },
        ],
        ident: Ident {
            symbol: Symbol(37, "X-Model"),
            span: Span {
                start: BytePos(
                    234,
                ),
                end: BytePos(
                    241,
                ),
            },
        },
        ty: Ty {
            kind: Path(
                Path {
                    segments: [
                        PathSegment {
                            ident: Ident {
                                symbol: Symbol(38, "string"),
                                span: Span {
                                    start: BytePos(
                                        242,
                                    ),
                                    end: BytePos(
                                        248,
                                    ),
                                },
                            },
                            id: NodeId(DUMMY),
                        },
                    ],
                    span: Span {
                        start: BytePos(
                            249,
                        ),
                        end: BytePos(
                            272,
                        ),
                    },
                },
            ),
            id: NodeId(DUMMY),
            span: Span {
                start: BytePos(
                    242,
                ),
                end: BytePos(
                    248,
                ),
            },
        },
        id: NodeId(DUMMY),
        span: Span {
            start: BytePos(
                234,
            ),
            end: BytePos(
                272,
            ),
        },
    },
]
